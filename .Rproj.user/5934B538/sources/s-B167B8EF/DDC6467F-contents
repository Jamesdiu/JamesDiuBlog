---
title: How to select a satisfying board game? - Part I
author: James Diu
date: '2020-07-10'
slug: how-to-select-a-satisfying-board-game
categories:
  - boardgame
  - R
tags: []
backtotop: no
# toc: no
---

<!-- ![](/post/2020-07-07-how-to-select-a-satisfying-board-game.en_files/catan_GOT.png) -->

Being a boardgame enthusiasts, I always introduce board games to my friends. Some of them might be another enthusiasts, while some might have an idea that board game is equivalent to chess. Most of time I use my instinct and my understanding on the taste of my friends to decide which game would be provide the greatest fun for us. However, it can be very biased due to my personal preference. On the other hand, I love to collect *different* board games. I hope my collection can be diverse enough to serve all kind of my friends background and preference. So how should I choose a game to meet general preference? And which game should I select, such that it will enrich my collection and make sure it could be fun? (It is quite upset when you find out a new game is boring...) Perhaps learning more about the general preference statistically is not a bad idea. 

## Data description
Regarding the data of board games, [BoardGameGeek(BGG)](https://boardgamegeek.com/) is undoubtely the biggest source. However, I am not going to pull the data directly. Instead, I will use the data from an interesting [post](https://dvatvani.github.io/BGG-Analysis-Part-1.html) about the trend and rating bias on BGG in 2018, which also come from BGG. Although it is not up-to-date data, I think it can still give us some insights and suggestions.
```{r, include=FALSE}
library(data.table)
library(tidyverse)
library(stringr)
library(corrplot)
library(gridExtra)
library(splitstackshape)
library(treemap)
library(entropy)
library(tidyselect)
```
```{r read_data, message=FALSE}
games_Jan2018 <- read_csv("data/games_Jan2018.csv")
df <- games_Jan2018
```
```{r data_cleaning, include=FALSE}
# These columns should have missing value instead of 0, replace with NA
list <- c("minplayers", "maxplayers", "playingtime","minplaytime", "maxplaytime")
df[list][df[list]==0]<-NA

# assign expansion as 1, boardgame as 0
df<- df %>% mutate(type = ifelse(type == "boardgame", 0, 1)) 

# Some error with the min & max players, and also min and max playing time
# df %>% filter(minplayers > maxplayers)

# Update data by visiting BGG for accurate information
df[df$id==234768,]$minplayers <- 2

df[df$id==235285,]$minplayers <- 2
df[df$id==235285,]$maxplayers <- 6

df[df$id==75294,]$minplayers <- 2
df[df$id==75294,]$maxplayers <- 20

# Since playing time is equal to maxplaytime, I switch the value for those minplaytime > maxplaytime 
df <- df %>% mutate(maxplaytime = ifelse(maxplaytime<minplaytime, minplaytime, maxplaytime),
                    minplaytime = ifelse(minplaytime<playingtime, minplaytime, playingtime))
```

In this dataset, we have total 95777 board games, including the base games(80105) and its expansion(15672). The information can also be separarted into 2 groups: games features and  responses on BGG. Since some information is useless or duplicated, below are the useful columns: 
Features: `type`, `yearpublished`, `minplayers`, `maxplayers`, `minplaytime`, `maxplaytime`, `minage`, `types`, `categories`, `mechanics`, `desginers` 
Responses: `users_rated`, `bayes_average_rating`, `total_owners`, `total_trader`, `total_wanters`, `total_wisher`, `total_comments`, `average_weight`

One of the most important data is `bayes_average_rating`, which is only avaliable for the games with at least 30 users rating. It is used instead of the average player rating in order to exclude those games which few ratings, so that to prevent the bias from small smaple size. After filtering out those data without 30 users rating, we still have 15026 games and 4714 expansion and we will place our foucs on them.
```{r}
df %>% filter(users_rated>=30) %>% group_by(type) %>% summarise(n=n())
df <- df %>% filter(users_rated>=30)
```

Now we have a rough idea about what cards are on our hand. Let's find out so further information from them. At the beginning, we will start with the numerical data.

### Correlation
Below is the correlation table among different numerical features. We can see the BGG rating has a positive correlation with the average weight and minimum age, and also slightly positive correlated to the year of publish. Meanwhile, we can also notice that the rating is somehow independent on the number of players and the duration of playing time, but both features show some dependence on both features. Therefore we will go through all these features one by one.
```{r, echo=FALSE}
corrplot(cor(
  df %>% select(BGG_rating = bayes_average_rating,
                avg_weight = average_weight,
                yearpublished, minage,
                minplayers, maxplayers, minplaytime, maxplaytime),
  use = "pairwise.complete.obs" # igrone missing pairs of data
  ),
  method = "circle", type ="lower")
```

### Weight
It obvious to notice that the weight of games has positive skewness, with the mode at 2. Meanwhile, we should be reminded that this is a score provided by the users, which means this is a relative value to other games. Due to the same reason, perharps we should consider to use other fixed feature to replace this subjective features.
```{r, echo=FALSE}
ggplot(df, aes(x=average_weight)) +
  geom_histogram(binwidth = 0.5) +
  scale_x_continuous(breaks = seq(0:5)) +
  ggtitle("Histogram of average weight(diffculty / complexity)")
```

### Year of publish
Since some of the games in our list do not have a clear publish date. Therefore we will start with the games published on or after 1985, which has already cover 90% of the games. For the rest of the data I will set them to NA as irrelevant due to small sample size.
```{r}
sort(df$yearpublished)[round(nrow(df)/10)]
```

From below plot, we can see that the average BGG rating raises slightly over the years. However it is hard to conclude whether the games puhlished are getting better or the baseline of users rating is going upwards. One interesting things to notice is the ratings of game are spreading futher to the higher rating, and so does the best rating. This would be the result of the increase of games published.
```{r, echo=FALSE}
avg_BGG_rate <- mean(df$bayes_average_rating)
annual_rating <-
  ggplot(df %>% group_by(yearpublished) %>%
         filter(yearpublished >= 1985)) +
  geom_point(aes(x=yearpublished, y=bayes_average_rating, color = as.factor(yearpublished))) +
  geom_point(data = df %>% group_by(yearpublished) %>%
         filter(yearpublished >= 1985) %>% summarise(avg_BGG_rating = mean(bayes_average_rating)),
         aes(x = yearpublished, y=avg_BGG_rating), colour = "black") +
  theme(legend.position = "none") +
  scale_x_continuous(name = "")+
  scale_y_continuous(name = "")+
  ggtitle("BGG rating over publish year (user rated >= 30)")
  
annual_rating + 
  geom_hline(yintercept = avg_BGG_rate, alpha = 0.5, linetype = "dashed") +
  geom_text(aes(1985, avg_BGG_rate, 
                label = paste("avg_BGG_rating: ", round(avg_BGG_rate,1)), 
                vjust = -1, hjust = -0.01), size = 3)
```
```{r, echo=FALSE}
ggplot(df %>% filter(yearpublished >=1985) %>% group_by(yearpublished) %>% summarise(n=n())) +
  geom_point(aes(x=yearpublished, y=n, color = as.factor(yearpublished))) +
  theme(legend.position = "none") +
  scale_x_continuous(name = "")+
  scale_y_continuous(name = "")+
  ggtitle("Number of game published along year (user rated >=30)")
```
```{r, echo=FALSE}
corrplot.mixed(cor(df %>% filter(yearpublished >=1985) %>%
               group_by(yearpublished) %>% summarise(Nr_of_pub = n(),
                                                     avg_rating = mean(bayes_average_rating),
                                                     sd_rating = sd(bayes_average_rating)),
         use = "pairwise.complete.obs" # igrone missing pairs of data
  ),
  lower.col = "black", number.cex = .7)
```

### Minimum age

We can know that minimum age is positivly correlated to weight and rating. It is reasonable because most of the BGG users are not children and I have sure them are not that interested into those games for children. This fact also implies the evaluation to children's games may be invalid. Besides, we can notice that the minimum age mainly fall into 5 ages: 8,10,12-14. WE can notice that the distrbution is very inbalance. In general the purpose of minimum age is an index for the complexity and content and the judgement is highly depends on the publisher (noted that games specially for 18+ is rare), therefore I would also prefer to transfer minimum age into 5 groups: <6, 6-8, 9-11, 12-14, 15+

```{r}
df <- df %>% mutate(age_group = ifelse(minage>14, "15+",
                                        ifelse(minage>11, "12-14",
                                               ifelse(minage>8, "9-11",
                                                      ifelse(minage>5, "6-8","<6")))),
                     age_group = factor(age_group, levels = c("<6", "6-8", "9-11","12-14","15+")))
```
```{r, echo=FALSE}
age_group <- df %>% group_by(age_group) %>% summarise(n=n())
ggplot(df)+
  geom_bar(aes(x=age_group, fill=age_group), stat = "count") +
    geom_text(data = age_group,
            aes(age_group, n+2, 
                label = paste(age_group,":", n), vjust=1.5), size = 4) +
    theme(
    axis.title = element_blank(),
    axis.text = element_blank(),
    axis.ticks = element_blank(),
    legend.position = "none") +
  scale_y_continuous(name="")+
  ggtitle("Histogram of minimum age group")
```

According to the plot, it is easy to see that <6 & 15+ has lower rating then other. It reviews that the correlation between minimum age and rating may not be linear.

```{r, echo=FALSE}
age_rating <-
  ggplot(df, aes(x=age_group, y=bayes_average_rating, color = age_group)) +
  geom_point() +
  geom_jitter() +
  geom_point(data = df %>%
               group_by(age_group) %>%
               summarise(avg_BGG_rating = mean(bayes_average_rating)),
             aes(x = age_group, y=avg_BGG_rating), colour = "black") +
  theme(legend.position = "none") +
  scale_x_discrete(name = "")+
  scale_y_continuous(name = "")+
  ggtitle("BGG rating over minimum age group (user rated >= 30)")
  
age_rating + 
  geom_hline(yintercept = avg_BGG_rate, alpha = 0.5, linetype = "dashed") +
  geom_text(aes(0, avg_BGG_rate, 
                label = paste("avg_BGG_rating: ", round(avg_BGG_rate,1)), 
                vjust = -1, hjust = -0.01), size = 3, color="black")
```

### Number of players
Most of the game can affort 2-4 players without any surprise.
```{r, echo=FALSE, warning=FALSE}
ggplot(df %>% select(maxplayers, minplayers) %>%
  filter(!is.na(minplayers), !is.na(maxplayers)) %>%
         top_n(-n()*0.95, maxplayers) %>%
    group_by(minplayers, maxplayers) %>%
    summarise(n=n())) +
  geom_point(aes(x=maxplayers, y=minplayers, size = n,
                 color = ifelse(n>=4000, "4000+",
                                ifelse(n>=3000, "3000-3999",
                                       ifelse(n>=2000, "2000-2999", "<2000"))))) +
  scale_x_continuous(breaks = seq(1:10)) + 
  scale_y_continuous(breaks = seq(1:10)) +
  scale_color_brewer(palette="Dark2") + 
  guides(size = FALSE) +
  scale_color_discrete(name = "Count") +
  ggtitle("Distribution of players avaliable for 95% board games")
```

### Playing time
We notice that the playing time can be simplified into 4 groups:
-1. short: 30 min or less
-2. meidum: 30 - 60 min
-3. long: 60 - 90 min
-4. extreme: 120 min or longer
In fact, from my experience the playing time can be varied a lot and normally longer than its stated. However, it still provides a segment of time length for the games.
Similiar to minimum age, I would prefer to use above groups as categorical value for the playing time instead of numeric value.

```{r, echo=FALSE}
ggplot(df %>% select(maxplaytime, minplaytime) %>%
              filter(!is.na(maxplaytime), !is.na(minplaytime)) %>%
              top_n(-round(n()*0.9), maxplaytime),
       aes(x=maxplaytime, y=minplaytime) ) +
  geom_bin2d(binwidth = 10) +
  scale_fill_continuous(type = "viridis") + 
  scale_x_continuous(breaks = seq(0,200,10)) +
  scale_y_continuous(breaks = seq(0,200,10)) +
  theme_bw() +
  ggtitle("Distribution of play time duration for 90% of board games")
```

```{r, message=FALSE}
# Assign new group
df <- df %>% mutate(playingtime = ifelse(maxplaytime >= 120, "Extreme",
                                         ifelse(maxplaytime >=90, "Long",
                                                ifelse(maxplaytime >=60, "Normal",
                                                       ifelse(is.na(maxplaytime),NA,"Short")))),
                    playingtime = factor(playingtime, levels =c("Short","Normal","Long","Extreme")))
```
```{r, echo=FALSE}
time_count <- df %>% group_by(playingtime) %>% summarise(n=n())
ggplot(df) +
  geom_bar(aes(x=playingtime, fill=playingtime), stat = "count") +
  theme(legend.position = "none") +
  geom_text(data = time_count,
            aes(playingtime, n+2, 
                label = paste(playingtime,":", n), vjust=1.5), size = 4) +
  # theme_bw() +
  theme(
    # axis.line = element_line(colour = "black"),
    # panel.grid.major = element_blank(),
    # panel.grid.minor = element_blank(),
    # panel.border = element_blank(),
    # panel.background = element_blank(),
    axis.title = element_blank(),
    # axis.text.y = element_blank(),
    # axis.text.x = element_blank(),
    axis.text = element_blank(),
    axis.ticks = element_blank(),
    legend.position = "none") +
  ggtitle("Histogram for playing time group")
```






